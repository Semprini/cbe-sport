# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-20 05:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('compete', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmericanFootballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BasketballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BowlsEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CricketEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CueEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DodgeballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FootballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GolfEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HandballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HurlingEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LacrosseEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PoloEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RugbyLeagueEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RugbyUnionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SquashEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VolleyballEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In-Active', 'In-Active'), ('Closed', 'Closed'), ('Tentative', 'Tentative'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Active', max_length=100)),
                ('priority', models.IntegerField(default=0)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
                ('zpos', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(default=1)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.Entry')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compete.Fixture')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compete.EventTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
